{"version":3,"sources":["api/users.js","api/todos.js","components/TodoForm/index.jsx","components/TodoForm/TodoForm.jsx","components/TodoList/index.jsx","components/TodoList/TodoList.jsx","App.js","index.js"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todos","userId","title","completed","TodoFrom","state","inputTodo","selectedUser","errorTodo","errorSelect","userID","inputForm","target","setState","value","submitButton","event","preventDefault","props","usersData","addTodo","trim","setTimeout","prevState","find","user","this","Form","className","data-tip","type","placeholder","onChange","Alert","variant","hidden","map","key","Button","onClick","React","Component","TodoList","todoList","Table","elem","length","slice","console","log","todoFromServer","todo","personId","person","App","todoData","lastId","arg","idLast","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1fd58fb8.chunk.js","sourcesContent":["const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import { TodoFrom } from './TodoForm';\n\nexport default TodoFrom;\n","import React from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport './TodoForm.css';\nimport PropTypes from 'prop-types';\n\nexport class TodoFrom extends React.Component {\n  state = {\n    inputTodo: '',\n    selectedUser: '',\n    errorTodo: true,\n    errorSelect: true,\n    userID: 3,\n  }\n\n  inputForm = ({ target }) => (\n    this.setState({ inputTodo: target.value })\n  )\n\n  submitButton = (event) => {\n    event.preventDefault();\n    const { usersData, addTodo } = this.props;\n    const { inputTodo, selectedUser, userID } = this.state;\n    const findUserId = name => usersData.find(user => user.name === name).id;\n\n    if (!inputTodo.trim() || !selectedUser) {\n      if (!inputTodo.trim()) {\n        this.setState({ errorTodo: false });\n        setTimeout(() => (this.setState({ errorTodo: true })), 2000);\n      }\n\n      if (!selectedUser) {\n        this.setState({ errorSelect: false });\n        setTimeout(() => (this.setState({ errorSelect: true })), 2000);\n      }\n\n      return;\n    }\n\n    this.setState(prevState => ({\n      inputTodo: '',\n      selectedUser: '',\n      errorTodo: true,\n      errorSelect: true,\n      userID: prevState.userID + 1,\n    }));\n\n    addTodo({\n      userId: findUserId(selectedUser),\n      id: userID,\n      title: inputTodo,\n      completed: false,\n      user: {\n        name: selectedUser,\n      },\n    });\n  }\n\n  render() {\n    const { usersData } = this.props;\n    const { inputTodo, errorTodo, selectedUser, errorSelect } = this.state;\n\n    return (\n      <>\n        <Form\n          className=\"inform\"\n        >\n          <div data-tip=\"Ex. - Clean the room\">\n            <input\n              type=\"text\"\n              placeholder=\"input todo\"\n              className=\"inputTodo mr-3\"\n              value={inputTodo}\n              onChange={this.inputForm}\n            />\n            <Alert\n              variant=\"danger\"\n              className=\"todoAlert\"\n              hidden={errorTodo}\n            >\n              Please enter the Title\n            </Alert>\n          </div>\n          <div data-tip=\"Ex. - Oliver Twist\">\n            <select\n              name=\"users\"\n              id=\"users\"\n              className=\"mr-3\"\n              value={selectedUser}\n              onChange={({ target }) => (\n                this.setState({ selectedUser: target.value })\n              )}\n            >\n              <option>Please choose a user</option>\n              {usersData.map(user => (\n                <option key={user.id}>{user.name}</option>\n              ))}\n            </select>\n            <Alert\n              variant=\"warning\"\n              className=\"selectAlert\"\n              hidden={errorSelect}\n            >\n              Please choose a User\n            </Alert>\n          </div>\n          <div>\n            <Button\n              variant=\"info\"\n              type=\"submit\"\n              onClick={this.submitButton}\n            >\n              Add Todo\n            </Button>\n          </div>\n        </Form>\n      </>\n    );\n  }\n}\n\nTodoFrom.propTypes = {\n  usersData: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    userName: PropTypes.string,\n    email: PropTypes.string,\n    address: PropTypes.object,\n    company: PropTypes.object,\n    phone: PropTypes.string,\n    website: PropTypes.string,\n  })).isRequired,\n  addTodo: PropTypes.func.isRequired,\n};\n","import { TodoList } from './TodoList';\n\nexport default TodoList;\n","import React from 'react';\nimport './TodoList.css';\nimport { Table } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nexport const TodoList = ({ todoList }) => (\n  <div className=\"todolist\">\n    <h1>TodoList</h1>\n    <div>\n      <Table>\n        <thead>\n          <tr>\n            <th>Todo name</th>\n            <th>User name</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {todoList.map(elem => (\n            <tr key={elem.id}>\n              <td>\n                {elem.title.length > 20\n                  ? `${elem.title.slice(0, 20)}...` : elem.title}\n              </td>\n              <td>{elem.user.name}</td>\n              <td>{elem.completed ? 'Finished' : 'In progress'}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      {/* eslint-disable-next-line no-console */}\n      {console.log(todoList)}\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todoList: PropTypes.arrayOf(PropTypes.shape({\n    userId: PropTypes.number.isRequired,\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n    user: PropTypes.object.isRequired,\n  })).isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport users from './api/users';\nimport todos from './api/todos';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\n\nconst findUser = personId => users.find(person => person.id === personId);\n\nconst todoFromServer = todos.map(todo => ({\n  ...todo,\n  user: findUser(todo.userId),\n}));\n\nclass App extends React.Component {\n  state = {\n    todoData: todoFromServer,\n    lastId: todoFromServer.length,\n  }\n\n  addTodo = (arg) => {\n    this.setState(prevState => ({\n      todoData: [...prevState.todoData, arg],\n    }));\n  }\n\n  render() {\n    const { todoData, lastId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__section\">\n          <h1>Add todo form</h1>\n          <p>\n            <span>Users: </span>\n            {users.length}\n          </p>\n          <TodoForm\n            usersData={users}\n            addTodo={this.addTodo}\n            idLast={lastId}\n          />\n          <TodoList todoList={todoData} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}